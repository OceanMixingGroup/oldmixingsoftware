function run_chambackup_oceanus(frompath,topath,dataprefix,polltime)%% function run_chambackup(frompath,topath,dataprefix,polltime);%% This is called by backup_chameleon_timer_oceanus every 'polltime' seconds% to copy the raw chameleon files from the compter where they are being% saved to another location.%% All but the LAST file is copied. This is because we don't want to copy a% file that is in the process of being written, which could corrupt the% file. %%% Originally by:% $Revision: 1.6 $ $Date: 2010/11/20 00:39:29 $ $Author: aperlin $	%% Updates and comments by Sally Warner, January 2014%%% Check that the frompath exists...if ~exist(frompath)	error(['The source directory: ' frompath ' can''t be found.  Check',  ...    	'that the machine has been mounted']);endif ~exist(topath)	error(['The source directory: ' topath ' can''t be found. Create',  ...    	' the directory']);endfprintf(1,'Polling for new files in %s\n',frompath );% first thing is to compare the two directory trees and make sure% they are identical.  If not, do some copying....fromp = frompath;top = topath;fromdir = [fromp dataprefix '*'];todir = [top dataprefix '*'];% files are sequential therefore lets strip the sequence numbers% to compare....[d dd]=dirdiff(fromdir,todir,0,1);% copy all but the LAST file. This is because we don't want to copy a partial% file that is still be written.if length(d) > 1    copyall(fromp,top,d(1:end-1));endfprintf(1,'\nWaiting %d seconds to poll again; on file: %s\n',...polltime,dd(end).name);disp(datestr(now))%   for j=1:polltime%     fprintf(1,'-');%     pause(1); %   end;%   fprintf('\n');% end;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function copyall(fromdir,todir,names)  for i=1:length(names);    from = [fromdir filesep names{i}];    to = [todir filesep];    fprintf(1,'Copying %s to %s\n',from,to);    [status,msg]=copyfile(from,to);    if ~status      error(msg);    end;  end;  